package com.izhuixin.rsps.controller;

import com.google.common.collect.Lists;
import com.google.gson.JsonObject;
import com.izhuixin.rsps.common.ManagerUserDetail;
import com.izhuixin.rsps.common.constant.OperatorType;
import com.izhuixin.rsps.common.dao.OperatorInfo;
import com.izhuixin.rsps.common.vo.web.OperatorInfoVO;
import com.izhuixin.rsps.common.vo.web.SysUserInfoVO;
import com.izhuixin.rsps.service.OperatorInfoService;
import com.izhuixin.rsps.service.SysUserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import java.util.List;

/**
 * 配送员信息
 */
@RequestMapping("user")
@Controller
public class ManagerUserController {

    @Autowired
    private OperatorInfoService operatorInfoService;

    @Autowired
    private SysUserService sysUserService;

    /**
     * 配送员主页
     * @return
     */
    @RequestMapping("/")
    public String listUser() {
        return "manager/user/user_list";
    }

    /**
     * 配送员列表数据
     * @return
     */
    @RequestMapping("/list/data")
    public String listUserData(ModelMap modelMap, HttpServletRequest request) {
        ManagerUserDetail userDetail = (ManagerUserDetail) request.getSession().getAttribute("user");
        List<OperatorInfoVO> users = operatorInfoService.getOperatorsByUserId(userDetail.getEntCode().concat("_"), userDetail.getUserId());
        modelMap.put("users",users);
        return "manager/user/user_list_content";
    }

    @RequestMapping("/show")
    public String showAdd(ModelMap modelMap,
                          @RequestParam(required = false, defaultValue = "") Long id,
                          HttpServletRequest request) {
        ManagerUserDetail userDetail = (ManagerUserDetail) request.getSession().getAttribute("user");

        List<SysUserInfoVO> sysUserInfoVOS = null;

        OperatorInfoVO user = null;
        if (id != null) { // 编辑
            user = operatorInfoService.getInfoById(id, userDetail.getEntCode().concat("_"));
        }
        if (user == null) {
            user = new OperatorInfoVO();
            user.setUserType(OperatorType.DRIVER.getIndex().byteValue());
            user.setSex((byte)0);

            sysUserInfoVOS = sysUserService.getDeepSysUserInfoVOs(userDetail.getUserId());
            SysUserInfoVO curUser = sysUserService.getUserInfoVOByUserId(userDetail.getUserId());
            sysUserInfoVOS.add(0, curUser);

            modelMap.put("mode", "add");
            modelMap.put("modeDesc", "新增用户");
        } else {
            sysUserInfoVOS = Lists.newArrayList();
            SysUserInfoVO curUser = sysUserService.getUserInfoVOByUserId(user.getUserId());
            sysUserInfoVOS.add(0, curUser);

            modelMap.put("mode", "edit");
            modelMap.put("modeDesc", "编辑用户");
        }



        modelMap.put("userObject", user);
        modelMap.put("parentUsers", sysUserInfoVOS);

        return "manager/user/user_add";
    }

    @RequestMapping("/save")
    @ResponseBody
    public String save(OperatorInfoVO operatorInfoVO, HttpServletRequest request) {
        ManagerUserDetail userDetail = (ManagerUserDetail) request.getSession().getAttribute("user");
//        operatorInfoVO.setUserId(userDetail.getUserId());
        JsonObject jo = new JsonObject();

        if (operatorInfoVO.getId() == null) {
            OperatorInfo operatorInfo = operatorInfoService.getOperatorInfoByName(operatorInfoVO.getRealName(), userDetail.getEntCode().concat("_"));
            if (operatorInfo != null) {
                jo.addProperty("result", "failed");
                jo.addProperty("msgCode", "101");  // 重名
                return jo.toString();
            }
        }
        if(operatorInfoService.checkOperatorNo(operatorInfoVO.getOperatorNo(),userDetail.getEntCode().concat("_"))){
            jo.addProperty("result", "failed");
            jo.addProperty("msgCode","102");
            return jo.toString();
        }
        boolean res = operatorInfoService.saveInfo(operatorInfoVO, userDetail.getEntCode().concat("_"));
        if (res) {
            jo.addProperty("result", "success");
            jo.addProperty("msgCode", "0");
        } else {
            jo.addProperty("result", "failed");
            jo.addProperty("msgCode", "100");
        }
        return jo.toString();
    }

    /**
     * 删除用户
     * @param id
     * @return
     */
    @RequestMapping("/delete")
    @ResponseBody
    public String deleteUser(HttpServletRequest request, Long id) {
        ManagerUserDetail userDetail = (ManagerUserDetail) request.getSession().getAttribute("user");

        JsonObject jsonObject = new JsonObject();

        boolean res = false;
        if (userDetail.getId().byteValue() != id.byteValue()) {
            res = operatorInfoService.deleteUser(id.intValue(), userDetail.getEntCode().concat("_"));
        }
        if (res) {
            jsonObject.addProperty("result", "success");
        } else {
            jsonObject.addProperty("result", "failed");
        }

        return jsonObject.toString();
    }

    /**
     * 重置密码
     * @param id
     * @return
     */
    @RequestMapping("/resetPwd")
    @ResponseBody
    public String resetPwd(Long id, HttpServletRequest request) {
        ManagerUserDetail userDetail = (ManagerUserDetail) request.getSession().getAttribute("user");

        JsonObject jsonObject = new JsonObject();

        boolean res = operatorInfoService.resetPwd(id.intValue(), userDetail.getEntCode().concat("_"));
        if (res) {
            jsonObject.addProperty("result", "success");
        } else {
            jsonObject.addProperty("result", "failed");
        }

        return jsonObject.toString();
    }

}
