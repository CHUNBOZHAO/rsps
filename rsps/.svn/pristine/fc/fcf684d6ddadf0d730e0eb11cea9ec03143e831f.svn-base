package com.izhuixin.rsps.service.impl;

import com.google.common.collect.Lists;
import com.google.gson.JsonArray;
import com.izhuixin.rsps.common.dba.AbstractCrudService;
import com.izhuixin.rsps.dao.manual.BoxLocationRecordDao;
import com.izhuixin.rsps.domain.automatic.BoxLocationRecordDO;
import com.izhuixin.rsps.domain.manual.BoxLocationRecordInfo;
import com.izhuixin.rsps.service.BoxLocationRecordService;
import com.izhuixin.rsps.service.EnterpriseService;
import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class BoxLocationRecordServiceImpl extends AbstractCrudService<BoxLocationRecordDO> implements BoxLocationRecordService {

    @Autowired
    private BoxLocationRecordDao boxLocationRecordDao;

    @Autowired
    private EnterpriseService enterpriseService;

    /**
     * 获取包裹的位置信息
     * @param boxId
     * @param orderId
     * @return
     */
    @Override
    public String queryBoxTrack(String boxId, String orderId) {

        List<BoxLocationRecordInfo> recordInfos = Lists.newArrayList();

        String entCode = enterpriseService.getEntCodeByBoxId(boxId);
        if (StringUtils.isNotBlank(entCode)) {
            try {
                recordInfos = boxLocationRecordDao.getBoxLocationRecords(boxId, orderId, entCode.concat("_"));
            } catch (Exception e) {
                logger.error(String.format("通过当前订单（%s）的包装箱（%s）位置信息出现异常"), e);
            }

            JsonArray ja = new JsonArray();
            JsonArray jaItem = null;

            Double previousDuLongitude = 0.0;
            Double previousDuLatitude = 0.0;
            for (BoxLocationRecordInfo recordInfo : recordInfos) {

                // 连续的经纬度只需要获取一个点
                if (recordInfo.getDuLongitude().longValue() == previousDuLongitude && recordInfo.getDuLatitude() == previousDuLatitude) {
                    continue;
                }

                jaItem = new JsonArray();
                jaItem.add(recordInfo.getDuLongitude());
                jaItem.add(recordInfo.getDuLatitude());
                ja.add(jaItem);

                previousDuLongitude = recordInfo.getDuLongitude();
                previousDuLatitude = recordInfo.getDuLatitude();
            }
            return ja.toString();
        } else {
            return "[]";
        }
    }

    /**
     * 保存包装箱位置记录
     * @param boxLocationRecordInfo
     * @param entCode
     * @return
     */
    @Override
    public boolean saveBoxLocation(BoxLocationRecordInfo boxLocationRecordInfo, String entCode) {
        boolean res = false;
        String boxId = "";
        try {
            boxId = boxLocationRecordInfo.getRfid();
            Integer saveRes = boxLocationRecordDao.saveBoxLocationRecord(boxLocationRecordInfo, entCode);
            if (saveRes < 1) {
                logger.warn(String.format("记录企业(%s)包装箱(%s)位置信息失败", entCode, boxId));
            } else {
                res = true;
            }
        } catch (Exception e) {
            logger.error(String.format("记录企业(%s)包装箱(%s)位置信息出现异常", entCode, boxId), e);
        }
        return res;
    }


}
